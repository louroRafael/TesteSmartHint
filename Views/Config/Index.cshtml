@using TesteSmartHint.Web.ViewModels.Config;
@model ConfigViewModel
@{
    ViewData["Title"] = "Configurações";
}

<div class="page-header">
    <div>
        <h1 class="page-title">Configurações</h1>
        <p class="page-description">Ajuste as configurações do sistema</p>
    </div>
    <div>
        <a role="button" class="btn btn-secondary" asp-controller="Customer" asp-action="Index">
            <i class="bi bi-arrow-return-left"></i>
            Voltar
        </a>
    </div>
</div>

<div class="card">
    <div class="card-body config-card">
        @using (Html.BeginForm("Save", "Config", FormMethod.Post, new { @class = "form-row", autocomplete = "off" }))
        {
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.Name)
            @Html.HiddenFor(x => x.Description)
            <div class="form-group">
                <label for="StateRegistrationForNaturalPerson">@Model.Description</label>
                @Html.CheckBoxFor(x => x.Value, new { @class = "form-check-input" })
            </div>
            <button class="btn btn-primary" type="submit">
                <i class="bi bi-save"></i>
                Salvar
            </button>
        }
    </div>
</div>