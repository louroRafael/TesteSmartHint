@using TesteSmartHint.Web.ViewModels.Customer;
@using TesteSmartHint.Domain.Entities;
@model PagedResult<CustomerViewModel>
@{
    ViewData["Title"] = "Lista de Clientes";
}

<div class="page-header">
    <div>
        <h1 class="page-title">Clientes</h1>
        <p class="page-description">Consulte os seus clientes cadastrados ou realize o cadastro de novos clientes</p>
    </div>
    <div>
        <a class="btn btn-primary" data-bs-toggle="collapse" href="#customerFilter" role="button">
            <i class="bi bi-filter"></i>
            Filtrar
        </a>
        <a class="btn btn-primary" asp-controller="Customer" asp-action="Register" role="button">
            <i class="bi bi-plus-lg"></i>
            Adicionar Cliente
        </a>
    </div>
</div>

<div class="collapse filter-options" id="customerFilter">
    <div class="card">
        <div class="card-body">
            @using (Html.BeginForm("Index", "Customer", FormMethod.Get, new { @id = "formCustomerFilter", autocomplete = "off" }))
            {
                @Html.Hidden("Filter.Page", Model.CurrentPage, new { @id = "FilterPage" })
                <div class="row">
                    <div class="col-6">
                        <div class="form-group">
                            <label for="FilterByName">Nome/Razão Social</label>
                            @Html.TextBox("Filter.ByName", "", new { @class = "form-control customer-filter", @id = "FilterByName", @placeholder = "Nome ou Razão Social do Cliente" })
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-group">
                            <label for="FilterByEmail">E-mail</label>
                            @Html.TextBox("Filter.ByEmail", "", new { @class = "form-control customer-filter", @id = "FilterByEmail", @placeholder = "E-mail do Cliente" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-5">
                        <div class="form-group">
                            <label for="FilterByPhone">Telefone</label>
                            @Html.TextBox("Filter.ByPhone", "", new { @class = "form-control customer-filter", @id = "FilterByPhone", @placeholder = "Telefone do Cliente" })
                        </div>
                    </div>
                    <div class="col-5">
                        <div class="form-group">
                            <label for="FilterByDate">Data de Cadastro</label>
                            @Html.TextBox("Filter.ByDate", "", new { @class = "form-control customer-filter", @id = "FilterByDate", @placeholder = "Selecione uma Data ou Período" })
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group">
                            <label for="FilterByBlocked">Cliente Bloqueado</label>
                            @Html.DropDownList("Filter.ByBlocked", new [] { new SelectListItem { Text = "Sim", Value="True" } , new SelectListItem { Text = "Não", Value="False"} }, "", new { @class = "form-control customer-filter", @id = "FilterByBlocked" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-secondary m-1" onclick="clearForm()">Limpar Filtros</button>
                    <button type="submit" class="btn btn-primary m-1">Aplicar</button>
                </div>
            }
        </div>
    </div>
</div>
<div class="filter-tags-container">
    <div class="filter-tag" id="TagFilterByName" style="display: none;">
        Nome
        <button class="btn-remove-filter" onclick="removeFilter('FilterByName')">
            <i class="bi bi-x"></i>
        </button>
    </div>
    <div class="filter-tag" id="TagFilterByEmail" style="display: none;">
        E-mail
        <button class="btn-remove-filter" onclick="removeFilter('FilterByEmail')">
            <i class="bi bi-x"></i>
        </button>
    </div>
    <div class="filter-tag" id="TagFilterByPhone" style="display: none;">
        Telefone
        <button class="btn-remove-filter" onclick="removeFilter('FilterByPhone')">
            <i class="bi bi-x"></i>
        </button>
    </div>
    <div class="filter-tag" id="TagFilterByDate" style="display: none;">
        Data de Cadastro
        <button class="btn-remove-filter" onclick="removeFilter('FilterByDate')">
            <i class="bi bi-x"></i>
        </button>
    </div>
    <div class="filter-tag" id="TagFilterByBlocked" style="display: none;">
        Cliente Bloqueado
        <button class="btn-remove-filter" onclick="removeFilter('FilterByBlocked')">
            <i class="bi bi-x"></i>
        </button>
    </div>
</div>

<table id="grdCustomers" class="table">
    <thead>
        <tr>
            <th scope="col">
                <input class="form-check-input" type="checkbox" id="selectedAll" />
            </th>
            <th scope="col">Nome/Razão Social</th>
            <th scope="col">E-mail</th>
            <th scope="col">Telefone</th>
            <th scope="col">Data de Cadastro</th>
            <th scope="col">Bloqueado</th>
            <th scope="col">Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var customer in Model.Items)
        {
            <tr>
                <td>
                    <input class="form-check-input customer-check" type="checkbox" />
                </td>
                <td>@customer.Name</td>
                <td>@customer.Email</td>
                <td>@customer.Phone</td>
                <td>@customer.CreatedAt</td>
                <td>
                    <input class="form-check-input" type="checkbox" checked="@customer.Blocked" onchange="changeBlockStatus('@customer.Id', this)" />
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new {id = customer.Id}, new { @class = "btn btn-primary" })
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-end">
        <li class="page-item @(Model.EnablePrevious ? "" : "disabled")">
            <a class="page-link" onclick="previousPage()">Anterior</a>
        </li>
        @for (var pageIndex = 1; pageIndex <= Model.TotalPages; pageIndex++)
        {
            <li class="page-item @(pageIndex == Model.CurrentPage ? "page-active disabled" : "")"><a class="page-link" onclick="goToPage(@pageIndex)">@pageIndex</a></li>
        }
        <li class="page-item @(Model.EnableNext ? "" : "disabled")">
            <a class="page-link" onclick="nextPage()">Próxima</a>
        </li>
    </ul>
</nav>